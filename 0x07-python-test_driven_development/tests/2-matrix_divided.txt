# Test cases for matrix_divided function

# Test Case 1: Basic division
>>> matrix = [
...     [1, 2, 3],
...     [4, 5, 6]
... ]
>>> matrix_divided(matrix, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

# Test Case 2: Division by 2
>>> matrix = [
...     [2, 4, 6],
...     [8, 10, 12]
... ]
>>> matrix_divided(matrix, 2)
[[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]

# Test Case 3: Division by 0 should raise ZeroDivisionError
>>> matrix = [
...     [1, 2, 3],
...     [4, 5, 6]
... ]
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero

# Test Case 4: Non-numeric divisor should raise TypeError
>>> matrix = [
...     [1, 2, 3],
...     [4, 5, 6]
... ]
>>> matrix_divided(matrix, 'divisor')
Traceback (most recent call last):
    ...
TypeError: div must be a number

# Test Case 5: Matrix with non-numeric elements should raise TypeError
>>> matrix = [
...     [1, 2, 'three'],
...     [4, 5, 6]
... ]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# Test Case 6: Matrix with rows of different sizes should raise TypeError
>>> matrix = [
...     [1, 2, 3],
...     [4, 5, 6, 7]
... ]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size
